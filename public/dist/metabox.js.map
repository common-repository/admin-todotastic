{"version":3,"sources":["webpack://adminTodotastic_[name]/webpack/bootstrap","webpack://adminTodotastic_[name]/external \"React\"","webpack://adminTodotastic_[name]/external \"wpnotes_utils\"","webpack://adminTodotastic_[name]/./src/public/ts/components/todoItem.tsx","webpack://adminTodotastic_[name]/./src/public/ts/components/mentionInputStyle.tsx","webpack://adminTodotastic_[name]/./src/public/ts/components/mentionListStyle.tsx","webpack://adminTodotastic_[name]/./src/public/ts/components/metabox.tsx","webpack://adminTodotastic_[name]/./src/public/ts/metabox.tsx","webpack://adminTodotastic_[name]/external \"ReactDOM\"","webpack://adminTodotastic_[name]/./src/public/ts/utils/index.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/index.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/stores.tsx","webpack://adminTodotastic_[name]/./src/public/ts/utils/helpers.tsx","webpack://adminTodotastic_[name]/external \"mobx\"","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/index.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/todo.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/option.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/user.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/base.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.get.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.post.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.put.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.delete.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/user.get.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","React","wpnotes_utils","TodoItem","observer","todo","todoStore","useStores","useState","isHover","setHover","id","onMouseEnter","onMouseLeave","className","wrap","flex","classNames","status","isDone","onChange","e","updateTodo","target","checked","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","description","onClick","deleteTodo","DeleteOutlined","backgroundColor","control","fontSize","fontWeight","fontFamily","minHeight","highlighter","padding","border","input","display","width","suggestions","list","item","borderBottom","marginBottom","MetboxComponent","userStore","setValue","displayTip","setDisplayTip","mentioned","setMetioned","useEffect","getTodos","entity_id","getCurrentID","handleSubmit","mentions","map","mention","addTodo","todos","loading","__","LoadingOutlined","errors","index","message","type","errorType","event","newValue","newPlainTextValue","disabled","style","mentionListStyle","placeholder","onKeyDown","ctrlKey","allowSuggestionsAboveCursor","trigger","query","callback","getUsers","users","mentionInputStyle","markup","justify","node","document","getElementById","render","StoreProvider","ReactDOM","UtilsFactory","requestMemo","localizationMemo","this","createRequestFactory","RootStore","optionStore","createLocalizationFactory","pureSlug","me","request","localization","configure","enforceActions","contextMemo","TodoStore","OptionStore","UserStore","createContextFactory","context","search","location","params","URLSearchParams","mobx","rootStore","runInAction","initAPIRequestUIStatuses","locationRestTodoGet","currentPage","total","handleException","locationRestTodoPost","locationRestTodoPut","tranformStatus","updatedTodo","indexOf","locationRestTodoDelete","text","label","BaseStore","observable","pureSlugCamelCased","BaseOptions","getPureSlug","process","assign","locationRestUserGet","responseJSON","isLoadingNeeded","path","method","RouteHttpVerb","GET","POST","PUT","DELETE"],"mappings":"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","file":"metabox.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpadminTodotastic_name_\"] = window[\"webpackJsonpadminTodotastic_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([152,5]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = React;","module.exports = wpnotes_utils;","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport { TodoModel } from \"../models\";\nimport { Checkbox, Row, Col } from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport { useStores } from \"../store\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport DOMPurify from \"dompurify\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\n/**\n * Removable todo item.\n */\nconst TodoItem = observer(({ todo }: { todo: TodoModel }) => {\n    const { todoStore } = useStores();\n    const [isHover, setHover] = useState(false);\n\n    const handleCheckBox = (e: CheckboxChangeEvent) => {\n        todoStore.updateTodo(todo, e.target.checked);\n    };\n\n    const handleClassName = (): string => {\n        return classNames(todo.status.isDone && \"checked-todo\");\n    };\n\n    const handleDelete = () => {\n        todoStore.deleteTodo(todo);\n    };\n\n    return (\n        <li key={todo.id} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\n            <Row className={isHover && \"todo-active\"} wrap={false}>\n                <Col className=\"gutter-row\" flex=\"auto\">\n                    <label className={handleClassName()}>\n                        <Checkbox onChange={handleCheckBox} checked={todo.status.isDone}>\n                            <span dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(todo.description) }}></span>\n                        </Checkbox>\n                    </label>\n                </Col>\n                <Col className=\"gutter-row\" flex=\"none\">\n                    {isHover && (\n                        <span className=\"todo-actions\" onClick={handleDelete}>\n                            <DeleteOutlined />\n                        </span>\n                    )}\n                </Col>\n            </Row>\n        </li>\n    );\n});\n\nexport { TodoItem };\n","export default {\n    backgroundColor: \"#cee4e5\"\n};\n","export default {\n    control: {\n        backgroundColor: \"#fff\",\n        fontSize: 14,\n        fontWeight: \"normal\"\n    },\n\n    \"&multiLine\": {\n        control: {\n            fontFamily: \"monospace\",\n            minHeight: 63\n        },\n        highlighter: {\n            padding: 9,\n            border: \"1px solid transparent\"\n        },\n        input: {\n            padding: 9,\n            border: \"1px solid silver\"\n        }\n    },\n\n    \"&singleLine\": {\n        display: \"inline-block\",\n        width: 180,\n\n        highlighter: {\n            padding: 1,\n            border: \"2px inset transparent\"\n        },\n        input: {\n            padding: 1,\n            border: \"2px inset\"\n        }\n    },\n\n    suggestions: {\n        list: {\n            backgroundColor: \"white\",\n            fontSize: 14\n        },\n        item: {\n            padding: \"5px 15px\",\n            borderBottom: \"1px solid rgba(0,0,0,0.15)\",\n            marginBottom: \"0px\",\n            \"&focused\": {\n                backgroundColor: \"#cee4e5\"\n            }\n        }\n    }\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Alert, Row } from \"antd\";\nimport { useStores } from \"../store\";\nimport { MentionsInput, Mention } from \"react-mentions\";\nimport { getCurrentID } from \"../utils/helpers\";\nimport { __ } from \"../utils\";\nimport { TodoItem } from \"./todoItem\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport mentionInputStyle from \"./mentionInputStyle\";\nimport mentionListStyle from \"./mentionListStyle\";\nimport \"../style/metabox.scss\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nconst MetboxComponent: FC<{}> = observer(() => {\n    const { userStore, todoStore } = useStores();\n    const [value, setValue] = useState(\"\");\n    const [displayTip, setDisplayTip] = useState(false);\n    const [mentioned, setMetioned] = useState([]);\n\n    useEffect(() => {\n        todoStore.getTodos({\n            entity_id: getCurrentID()\n        });\n    }, []);\n\n    const handleSubmit = () => {\n        const mentions = mentioned.map((mention) => mention.id);\n        todoStore.addTodo(value, mentions);\n        setValue(\"\");\n        //if (displayTip) {\n        //setDisplayTip(false);\n        //}\n        displayTip ? setDisplayTip(false) : setDisplayTip(true);\n        setMetioned([]);\n    };\n\n    const fetchUsers = (query: string, callback: any) => {\n        userStore.getUsers(query);\n        return userStore.users;\n    };\n\n    const handleChange = (event: any, newValue: string, newPlainTextValue: string, mentions: []) => {\n        setValue(newValue);\n        setMetioned(mentions);\n    };\n\n    const checkSumbit = (event: any) => {\n        if (event.ctrlKey && event.key === \"Enter\") {\n            handleSubmit();\n            setDisplayTip(false);\n        }\n    };\n\n    const getPlaceHolder = (): string => {\n        return getCurrentID()\n            ? \"Mention user by typing `@`\"\n            : \"Cannot add any todo item before having this post created\";\n    };\n\n    return (\n        <div className=\"wp-styleguide\">\n            <ul>\n                {todoStore.todos.map((t) => (\n                    <TodoItem key={t.id} todo={t} />\n                ))}\n                {!todoStore.todos.length && !todoStore.loading ? __(\"No entries\") : \"\"}\n            </ul>\n            {todoStore.loading && <LoadingOutlined />}\n            {todoStore.errors.length > 0 &&\n                todoStore.errors.map((m, index) => <Alert key={index} message={m} type={todoStore.errorType} />)}\n            <MentionsInput\n                value={value}\n                onChange={handleChange}\n                disabled={!getCurrentID()}\n                className=\"mentions-input\"\n                style={mentionListStyle}\n                placeholder={getPlaceHolder()}\n                onKeyDown={checkSumbit}\n                allowSuggestionsAboveCursor={true}\n            >\n                <Mention\n                    trigger=\"@\"\n                    data={fetchUsers}\n                    style={mentionInputStyle}\n                    markup='<span style=\"background-color:#cee4e5\" data-id=\"__id__\">@__display__</span>'\n                />\n            </MentionsInput>\n            <div className=\"metabox-footer\">\n                <Row justify=\"end\">\n                    {displayTip && (\n                        <span>\n                            Tip: <span className=\"todo-tooltip\">Ctrl + Enter</span> to add &nbsp;\n                        </span>\n                    )}\n                    <button type=\"button\" className=\"button add-todo\" onClick={handleSubmit}>\n                        {__(\"Add\")}\n                    </button>\n                </Row>\n            </div>\n        </div>\n    );\n});\n\nexport { MetboxComponent };\n","/* istanbul ignore file: we do not need to care about the entry point file as errors are detected through integration tests (E2E) */\n\n/**\n * The entry point for Post edit metamox\n */\nimport \"@wpnotes/utils\"; // Import once for startup polyfilling (e. g. setimmediate)\nimport { render } from \"react-dom\";\nimport React from \"react\";\nimport { MetboxComponent } from \"./components\";\nimport { RootStore } from \"./store\";\nimport \"./style/metabox.scss\";\n\nconst node = document.getElementById(`user-list-component`);\n\nif (node) {\n    render(\n        <RootStore.StoreProvider>\n            <MetboxComponent />\n        </RootStore.StoreProvider>,\n        node\n    );\n}\n\nexport * from \"@wpnotes/utils\";\nexport * from \"./wp-api\";\nexport * from \"./store\";\n","module.exports = ReactDOM;","/* istanbul ignore file: this file does not contain any logic, only factory calls */\n\nimport { createRequestFactory, createLocalizationFactory } from \"@wpnotes/utils\";\nimport { RootStore } from \"../store\";\n\nclass UtilsFactory {\n    private static me: UtilsFactory;\n\n    private requestMemo: ReturnType<typeof createRequestFactory>;\n\n    private localizationMemo: ReturnType<typeof createLocalizationFactory>;\n\n    // Create REST API relevant stuff from factory\n    public get request() {\n        return this.requestMemo\n            ? this.requestMemo\n            : (this.requestMemo = createRequestFactory(RootStore.get.optionStore));\n    }\n\n    // Create i18n relevant stuff from factory\n    public get localization() {\n        return this.localizationMemo\n            ? this.localizationMemo\n            : (this.localizationMemo = createLocalizationFactory(RootStore.get.optionStore.pureSlug));\n    }\n\n    public static get get() {\n        return UtilsFactory.me ? UtilsFactory.me : (UtilsFactory.me = new UtilsFactory());\n    }\n}\n\nconst urlBuilder: UtilsFactory[\"requestMemo\"][\"urlBuilder\"] = (...args) => UtilsFactory.get.request.urlBuilder(...args);\nconst request: UtilsFactory[\"requestMemo\"][\"request\"] = (...args) => UtilsFactory.get.request.request(...args);\nconst _n: UtilsFactory[\"localizationMemo\"][\"_n\"] = (...args) => UtilsFactory.get.localization._n(...args);\nconst _nx: UtilsFactory[\"localizationMemo\"][\"_nx\"] = (...args) => UtilsFactory.get.localization._nx(...args);\nconst _x: UtilsFactory[\"localizationMemo\"][\"_x\"] = (...args) => UtilsFactory.get.localization._x(...args);\nconst __: UtilsFactory[\"localizationMemo\"][\"__\"] = (...args) => UtilsFactory.get.localization.__(...args);\nconst _i: UtilsFactory[\"localizationMemo\"][\"_i\"] = (...args) => UtilsFactory.get.localization._i(...args);\n\nexport { urlBuilder, request, _n, _nx, _x, __, _i };\n","export * from \"./todo\";\nexport * from \"./stores\";\nexport * from \"./option\";\nexport * from \"./user\";\n","import { configure } from \"mobx\";\nimport { createContextFactory } from \"@wpnotes/utils\";\nimport { TodoStore } from \"./todo\";\nimport { OptionStore } from \"./option\";\nimport { UserStore } from \"./user\";\n\nconfigure({\n    enforceActions: \"always\"\n});\n\n/**\n * A collection of all available stores which gets available\n * through the custom hook useStores in your function components.\n *\n * @see https://mobx.js.org/best/store.html#combining-multiple-stores\n */\nclass RootStore {\n    private static me: RootStore;\n\n    public todoStore: TodoStore;\n\n    public optionStore: OptionStore;\n\n    public userStore: UserStore;\n\n    private contextMemo: {\n        StoreContext: React.Context<RootStore>;\n        StoreProvider: React.FC<{}>;\n        useStores: () => RootStore;\n    };\n\n    public get context() {\n        return this.contextMemo\n            ? this.contextMemo\n            : (this.contextMemo = createContextFactory((this as unknown) as RootStore));\n    }\n\n    private constructor() {\n        this.todoStore = new TodoStore(this);\n        this.optionStore = new OptionStore(this);\n        this.userStore = new UserStore(this);\n    }\n\n    public static get StoreProvider() {\n        return RootStore.get.context.StoreProvider;\n    }\n\n    public static get get() {\n        return RootStore.me ? RootStore.me : (RootStore.me = new RootStore());\n    }\n}\n\nconst useStores = () => RootStore.get.context.useStores();\n\nexport { RootStore, useStores };\n","const getCurrentID = () => {\n    const { search } = window.location;\n    const params = new URLSearchParams(search);\n    return params.get(\"post\") ? params.get(\"post\") : 0;\n};\n\nexport { getCurrentID };\n","module.exports = mobx;","export * from \"./user.get\";\nexport * from \"./todo.get\";\nexport * from \"./todo.put\";\nexport * from \"./todo.delete\";\nexport * from \"./todo.post\";\n","import { observable, runInAction } from \"mobx\";\nimport { RootStore } from \"./stores\";\nimport { TodoModel } from \"../models\";\nimport { BaseStore } from \"./base\";\nimport {\n    RequestRouteTodoGet,\n    ParamsRouteTodoGet,\n    ResponseRouteTodoGet,\n    locationRestTodoGet,\n    RequestRouteTodoPut,\n    ParamsRouteTodoPut,\n    ResponseRouteTodoPut,\n    locationRestTodoPut,\n    RequestRouteTodoDelete,\n    ParamsRouteTodoDelete,\n    ResponseRouteTodoDelete,\n    locationRestTodoDelete,\n    RequestRouteTodoPost,\n    ParamsRouteTodoPost,\n    ResponseRouteTodoPost,\n    locationRestTodoPost\n} from \"../wp-api\";\nimport { request } from \"../utils\";\nimport type { statusType } from \"../interfaces\";\nimport { getCurrentID } from \"../utils/helpers\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass TodoStore extends BaseStore {\n    @observable\n    public todos: TodoModel[] = [];\n\n    constructor(rootStore: RootStore) {\n        super(rootStore);\n    }\n\n    async getTodos(params: any) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses(true);\n        });\n        try {\n            const result = await request<RequestRouteTodoGet, ParamsRouteTodoGet, ResponseRouteTodoGet>({\n                location: locationRestTodoGet,\n                params\n            });\n            runInAction(() => {\n                this.todos = result.data;\n                this.currentPage = result.currentPage;\n                this.total = result.total;\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        } finally {\n            runInAction(() => {\n                this.loading = false;\n            });\n        }\n    }\n\n    async addTodo(description: string, mentions: number[]) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses(true);\n        });\n        try {\n            const result = await request<RequestRouteTodoPost, ParamsRouteTodoPost, ResponseRouteTodoPost>({\n                location: locationRestTodoPost,\n                request: {\n                    description,\n                    entity_id: getCurrentID(),\n                    mentions\n                }\n            });\n            runInAction(() => {\n                this.todos.push(result.data[0]);\n                this.errors = result.errors ? result.errors : [];\n                this.errorType = result.errors ? \"warning\" : \"success\";\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        } finally {\n            runInAction(() => {\n                this.loading = false;\n            });\n        }\n    }\n\n    async updateTodo(todo: TodoModel, isDone: boolean) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses();\n        });\n        try {\n            const result = await request<RequestRouteTodoPut, ParamsRouteTodoPut, ResponseRouteTodoPut>({\n                location: locationRestTodoPut,\n                params: {\n                    id: todo.id\n                },\n                request: {\n                    status: this.tranformStatus(isDone)\n                }\n            });\n            runInAction(() => {\n                const updatedTodo = result.data[0];\n                const index = this.todos.indexOf(todo);\n                if (index !== -1) {\n                    this.todos[index] = updatedTodo;\n                }\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        }\n    }\n\n    async deleteTodo(todo: TodoModel) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses();\n        });\n        try {\n            await request<RequestRouteTodoDelete, ParamsRouteTodoDelete, ResponseRouteTodoDelete>({\n                location: locationRestTodoDelete,\n                params: {\n                    id: todo.id\n                }\n            });\n            runInAction(() => {\n                const index = this.todos.indexOf(todo);\n                if (index !== -1) {\n                    this.todos.splice(index, 1);\n                }\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        }\n    }\n\n    tranformStatus(isDone: boolean): statusType {\n        if (isDone) {\n            return {\n                text: \"Done\",\n                label: \"done\",\n                isDone: true\n            };\n        } else {\n            return {\n                text: \"Open\",\n                label: \"open\",\n                isDone: false\n            };\n        }\n    }\n}\n\nexport { TodoStore };\n","import { observable, runInAction } from \"mobx\";\nimport { BaseOptions } from \"@wpnotes/utils\";\nimport { RootStore } from \"./stores\";\n\nclass OptionStore extends BaseOptions {\n    // Implement \"others\" property in your Assets.php;\n    @observable\n    public others: {} = {};\n\n    public readonly pureSlug: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly pureSlugCamelCased: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        super();\n        this.rootStore = rootStore;\n        this.pureSlug = BaseOptions.getPureSlug(process.env);\n        this.pureSlugCamelCased = BaseOptions.getPureSlug(process.env, true);\n\n        // Use the localized WP object to fill this object values.\n        runInAction(() => Object.assign(this, (window as any)[this.pureSlugCamelCased]));\n    }\n}\n\nexport { OptionStore };\n","import { observable, runInAction } from \"mobx\";\nimport { RootStore } from \"./stores\";\nimport { UserModel } from \"../models\";\nimport { RequestRouteUserGet, ParamsRouteUserGet, ResponseRouteUserGet, locationRestUserGet } from \"../wp-api\";\nimport { request } from \"../utils\";\nimport { BaseStore } from \"./base\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\n/**\n * Do a test ajax call when clicking the REST API url.\n *\n * @param e\n */\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass UserStore extends BaseStore {\n    @observable\n    public users: UserModel[] = [];\n\n    constructor(rootStore: RootStore) {\n        super(rootStore);\n    }\n\n    async getUsers(query: string) {\n        runInAction(() => {\n            this.loading = true;\n        });\n        try {\n            const result = await request<RequestRouteUserGet, ParamsRouteUserGet, ResponseRouteUserGet>({\n                location: locationRestUserGet,\n                params: {\n                    s: query\n                }\n            });\n            runInAction(() => {\n                this.users = result.data;\n                this.errors = result.errors;\n                this.errorType = \"warning\";\n            });\n        } catch (e) {\n            //console.log(e.responseJSON);\n        } finally {\n            runInAction(() => {\n                this.loading = false;\n            });\n        }\n    }\n}\n\nexport { UserStore };\n","import { observable } from \"mobx\";\nimport { RootStore } from \"./stores\";\n\nclass BaseStore {\n    @observable\n    public errors: string[] = [];\n\n    @observable\n    public errorType: \"success\" | \"info\" | \"warning\" | \"error\";\n\n    @observable\n    public currentPage: number;\n\n    @observable\n    public total: number;\n\n    @observable\n    public loading: boolean;\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n    }\n\n    handleException(e: any) {\n        if (e.status >= 500) {\n            this.errorType = \"error\";\n        }\n\n        if (e.status >= 400) {\n            this.errorType = \"warning\";\n        }\n\n        this.errors = e.responseJSON.errors;\n    }\n\n    initAPIRequestUIStatuses(isLoadingNeeded = false) {\n        if (isLoadingNeeded) {\n            this.loading = true;\n        }\n        this.errors = [];\n        this.errorType = \"success\";\n    }\n}\n\nexport { BaseStore };\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { TodoModel } from \"../models\";\n\nexport const locationRestTodoGet: RouteLocationInterface = {\n    path: \"/todo\",\n    method: RouteHttpVerb.GET\n};\n\nexport type RequestRouteTodoGet = RouteRequestInterface;\n\nexport type ParamsRouteTodoGet = RouteParamsInterface;\n\nexport interface ResponseRouteTodoGet extends RouteResponseInterface {\n    data: TodoModel[];\n    currentPage: number;\n    total: number;\n    errors: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { TodoModel } from \"../models\";\n\nexport const locationRestTodoPost: RouteLocationInterface = {\n    path: \"/todo\",\n    method: RouteHttpVerb.POST\n};\n\nexport type RequestRouteTodoPost = RouteRequestInterface;\n\nexport type ParamsRouteTodoPost = RouteParamsInterface;\n\nexport interface ResponseRouteTodoPost extends RouteResponseInterface {\n    data: TodoModel[];\n    errors?: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { TodoModel } from \"../models\";\n\nexport const locationRestTodoPut: RouteLocationInterface = {\n    path: \"/todo/:id\",\n    method: RouteHttpVerb.PUT\n};\n\nexport type RequestRouteTodoPut = RouteRequestInterface;\n\nexport type ParamsRouteTodoPut = RouteParamsInterface;\n\nexport interface ResponseRouteTodoPut extends RouteResponseInterface {\n    data: TodoModel[];\n    errors: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\n\nexport const locationRestTodoDelete: RouteLocationInterface = {\n    path: \"/todo/:id\",\n    method: RouteHttpVerb.DELETE\n};\n\nexport type RequestRouteTodoDelete = RouteRequestInterface;\n\nexport type ParamsRouteTodoDelete = RouteParamsInterface;\n\nexport interface ResponseRouteTodoDelete extends RouteResponseInterface {\n    message: string;\n    errors?: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { UserModel } from \"../models\";\n\nexport const locationRestUserGet: RouteLocationInterface = {\n    path: \"/user\",\n    method: RouteHttpVerb.GET\n};\n\nexport type RequestRouteUserGet = RouteRequestInterface;\n\nexport type ParamsRouteUserGet = RouteParamsInterface;\n\nexport interface ResponseRouteUserGet extends RouteResponseInterface {\n    data: UserModel[];\n    errors: string[];\n}\n"],"sourceRoot":""}