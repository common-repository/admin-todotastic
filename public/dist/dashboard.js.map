{"version":3,"sources":["webpack://adminTodotastic_[name]/webpack/bootstrap","webpack://adminTodotastic_[name]/external \"React\"","webpack://adminTodotastic_[name]/external \"wpnotes_utils\"","webpack://adminTodotastic_[name]/./src/public/ts/components/dashboard.tsx","webpack://adminTodotastic_[name]/./src/public/ts/dashboard.tsx","webpack://adminTodotastic_[name]/external \"ReactDOM\"","webpack://adminTodotastic_[name]/./src/public/ts/utils/index.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/index.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/stores.tsx","webpack://adminTodotastic_[name]/./src/public/ts/utils/helpers.tsx","webpack://adminTodotastic_[name]/external \"mobx\"","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/index.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/todo.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/option.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/user.tsx","webpack://adminTodotastic_[name]/./src/public/ts/store/base.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.get.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.post.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.put.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/todo.delete.tsx","webpack://adminTodotastic_[name]/./src/public/ts/wp-api/user.get.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","React","wpnotes_utils","DashboardComponent","observer","todoStore","useStores","useEffect","getTodos","is_done","is_mine_only","with","limit","className","itemLayout","size","dataSource","todos","renderItem","Item","id","href","post","link","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","description","justify","wrap","simple","defaultCurrent","current","currentPage","onChange","page","pageSize","total","errors","map","index","message","type","errorType","node","document","getElementById","render","StoreProvider","ReactDOM","UtilsFactory","requestMemo","localizationMemo","this","createRequestFactory","RootStore","optionStore","createLocalizationFactory","pureSlug","me","request","__","localization","configure","enforceActions","userStore","contextMemo","TodoStore","OptionStore","UserStore","createContextFactory","context","getCurrentID","search","location","params","URLSearchParams","mobx","rootStore","runInAction","initAPIRequestUIStatuses","locationRestTodoGet","handleException","loading","mentions","locationRestTodoPost","entity_id","todo","isDone","locationRestTodoPut","status","tranformStatus","updatedTodo","indexOf","locationRestTodoDelete","text","label","BaseStore","observable","pureSlugCamelCased","BaseOptions","getPureSlug","process","assign","query","locationRestUserGet","users","e","responseJSON","isLoadingNeeded","path","method","RouteHttpVerb","GET","POST","PUT","DELETE"],"mappings":"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","file":"dashboard.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpadminTodotastic_name_\"] = window[\"webpackJsonpadminTodotastic_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([150,4]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = React;","module.exports = wpnotes_utils;","import React, { FC, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Alert, List, Pagination, Row } from \"antd\";\nimport { useStores } from \"../store\";\nimport DOMPurify from \"dompurify\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nconst DashboardComponent: FC<{}> = observer(() => {\n    const { todoStore } = useStores();\n    const defaultPageSize = 5;\n    useEffect(() => {\n        todoStore.getTodos({\n            is_done: 0,\n            is_mine_only: 1,\n            with: \"post\",\n            limit: defaultPageSize\n        });\n    }, []);\n\n    const handlePagination = (page: number, pageSize: number) => {\n        todoStore.getTodos({\n            is_done: 0,\n            is_mine_only: 1,\n            with: \"post\",\n            limit: defaultPageSize,\n            page\n        });\n    };\n\n    return (\n        <div className=\"wp-styleguide\">\n            <List\n                itemLayout=\"horizontal\"\n                size=\"small\"\n                dataSource={todoStore.todos}\n                renderItem={(t) => (\n                    <List.Item key={t.id}>\n                        <a href={t.post.link}>\n                            <span dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(t.description) }}></span>\n                        </a>\n                    </List.Item>\n                )}\n            />\n            {todoStore.todos.length > 0 && (\n                <Row justify=\"end\" wrap={false}>\n                    <Pagination\n                        simple\n                        defaultCurrent={1}\n                        current={todoStore.currentPage}\n                        onChange={handlePagination}\n                        pageSize={defaultPageSize}\n                        total={todoStore.total}\n                    />\n                </Row>\n            )}\n            {todoStore.errors.length > 0 &&\n                todoStore.errors.map((m, index) => <Alert key={index} message={m} type={todoStore.errorType} />)}\n        </div>\n    );\n});\n\nexport { DashboardComponent };\n","/* istanbul ignore file: we do not need to care about the entry point file as errors are detected through integration tests (E2E) */\n\n/**\n * The entry point for dashboard meta box\n */\nimport \"@wpnotes/utils\"; // Import once for startup polyfilling (e. g. setimmediate)\nimport { render } from \"react-dom\";\nimport { DashboardComponent } from \"./components\";\nimport React from \"react\";\nimport { RootStore } from \"./store\";\nimport \"./style/dashboard.scss\";\n\nconst node = document.getElementById(`bdotstd-dashboard-list-component`);\n\nif (node) {\n    render(\n        <RootStore.StoreProvider>\n            <DashboardComponent />\n        </RootStore.StoreProvider>,\n        node\n    );\n}\n\nexport * from \"@wpnotes/utils\";\nexport * from \"./wp-api\";\nexport * from \"./store\";\n","module.exports = ReactDOM;","/* istanbul ignore file: this file does not contain any logic, only factory calls */\n\nimport { createRequestFactory, createLocalizationFactory } from \"@wpnotes/utils\";\nimport { RootStore } from \"../store\";\n\nclass UtilsFactory {\n    private static me: UtilsFactory;\n\n    private requestMemo: ReturnType<typeof createRequestFactory>;\n\n    private localizationMemo: ReturnType<typeof createLocalizationFactory>;\n\n    // Create REST API relevant stuff from factory\n    public get request() {\n        return this.requestMemo\n            ? this.requestMemo\n            : (this.requestMemo = createRequestFactory(RootStore.get.optionStore));\n    }\n\n    // Create i18n relevant stuff from factory\n    public get localization() {\n        return this.localizationMemo\n            ? this.localizationMemo\n            : (this.localizationMemo = createLocalizationFactory(RootStore.get.optionStore.pureSlug));\n    }\n\n    public static get get() {\n        return UtilsFactory.me ? UtilsFactory.me : (UtilsFactory.me = new UtilsFactory());\n    }\n}\n\nconst urlBuilder: UtilsFactory[\"requestMemo\"][\"urlBuilder\"] = (...args) => UtilsFactory.get.request.urlBuilder(...args);\nconst request: UtilsFactory[\"requestMemo\"][\"request\"] = (...args) => UtilsFactory.get.request.request(...args);\nconst _n: UtilsFactory[\"localizationMemo\"][\"_n\"] = (...args) => UtilsFactory.get.localization._n(...args);\nconst _nx: UtilsFactory[\"localizationMemo\"][\"_nx\"] = (...args) => UtilsFactory.get.localization._nx(...args);\nconst _x: UtilsFactory[\"localizationMemo\"][\"_x\"] = (...args) => UtilsFactory.get.localization._x(...args);\nconst __: UtilsFactory[\"localizationMemo\"][\"__\"] = (...args) => UtilsFactory.get.localization.__(...args);\nconst _i: UtilsFactory[\"localizationMemo\"][\"_i\"] = (...args) => UtilsFactory.get.localization._i(...args);\n\nexport { urlBuilder, request, _n, _nx, _x, __, _i };\n","export * from \"./todo\";\nexport * from \"./stores\";\nexport * from \"./option\";\nexport * from \"./user\";\n","import { configure } from \"mobx\";\nimport { createContextFactory } from \"@wpnotes/utils\";\nimport { TodoStore } from \"./todo\";\nimport { OptionStore } from \"./option\";\nimport { UserStore } from \"./user\";\n\nconfigure({\n    enforceActions: \"always\"\n});\n\n/**\n * A collection of all available stores which gets available\n * through the custom hook useStores in your function components.\n *\n * @see https://mobx.js.org/best/store.html#combining-multiple-stores\n */\nclass RootStore {\n    private static me: RootStore;\n\n    public todoStore: TodoStore;\n\n    public optionStore: OptionStore;\n\n    public userStore: UserStore;\n\n    private contextMemo: {\n        StoreContext: React.Context<RootStore>;\n        StoreProvider: React.FC<{}>;\n        useStores: () => RootStore;\n    };\n\n    public get context() {\n        return this.contextMemo\n            ? this.contextMemo\n            : (this.contextMemo = createContextFactory((this as unknown) as RootStore));\n    }\n\n    private constructor() {\n        this.todoStore = new TodoStore(this);\n        this.optionStore = new OptionStore(this);\n        this.userStore = new UserStore(this);\n    }\n\n    public static get StoreProvider() {\n        return RootStore.get.context.StoreProvider;\n    }\n\n    public static get get() {\n        return RootStore.me ? RootStore.me : (RootStore.me = new RootStore());\n    }\n}\n\nconst useStores = () => RootStore.get.context.useStores();\n\nexport { RootStore, useStores };\n","const getCurrentID = () => {\n    const { search } = window.location;\n    const params = new URLSearchParams(search);\n    return params.get(\"post\") ? params.get(\"post\") : 0;\n};\n\nexport { getCurrentID };\n","module.exports = mobx;","export * from \"./user.get\";\nexport * from \"./todo.get\";\nexport * from \"./todo.put\";\nexport * from \"./todo.delete\";\nexport * from \"./todo.post\";\n","import { observable, runInAction } from \"mobx\";\nimport { RootStore } from \"./stores\";\nimport { TodoModel } from \"../models\";\nimport { BaseStore } from \"./base\";\nimport {\n    RequestRouteTodoGet,\n    ParamsRouteTodoGet,\n    ResponseRouteTodoGet,\n    locationRestTodoGet,\n    RequestRouteTodoPut,\n    ParamsRouteTodoPut,\n    ResponseRouteTodoPut,\n    locationRestTodoPut,\n    RequestRouteTodoDelete,\n    ParamsRouteTodoDelete,\n    ResponseRouteTodoDelete,\n    locationRestTodoDelete,\n    RequestRouteTodoPost,\n    ParamsRouteTodoPost,\n    ResponseRouteTodoPost,\n    locationRestTodoPost\n} from \"../wp-api\";\nimport { request } from \"../utils\";\nimport type { statusType } from \"../interfaces\";\nimport { getCurrentID } from \"../utils/helpers\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass TodoStore extends BaseStore {\n    @observable\n    public todos: TodoModel[] = [];\n\n    constructor(rootStore: RootStore) {\n        super(rootStore);\n    }\n\n    async getTodos(params: any) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses(true);\n        });\n        try {\n            const result = await request<RequestRouteTodoGet, ParamsRouteTodoGet, ResponseRouteTodoGet>({\n                location: locationRestTodoGet,\n                params\n            });\n            runInAction(() => {\n                this.todos = result.data;\n                this.currentPage = result.currentPage;\n                this.total = result.total;\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        } finally {\n            runInAction(() => {\n                this.loading = false;\n            });\n        }\n    }\n\n    async addTodo(description: string, mentions: number[]) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses(true);\n        });\n        try {\n            const result = await request<RequestRouteTodoPost, ParamsRouteTodoPost, ResponseRouteTodoPost>({\n                location: locationRestTodoPost,\n                request: {\n                    description,\n                    entity_id: getCurrentID(),\n                    mentions\n                }\n            });\n            runInAction(() => {\n                this.todos.push(result.data[0]);\n                this.errors = result.errors ? result.errors : [];\n                this.errorType = result.errors ? \"warning\" : \"success\";\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        } finally {\n            runInAction(() => {\n                this.loading = false;\n            });\n        }\n    }\n\n    async updateTodo(todo: TodoModel, isDone: boolean) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses();\n        });\n        try {\n            const result = await request<RequestRouteTodoPut, ParamsRouteTodoPut, ResponseRouteTodoPut>({\n                location: locationRestTodoPut,\n                params: {\n                    id: todo.id\n                },\n                request: {\n                    status: this.tranformStatus(isDone)\n                }\n            });\n            runInAction(() => {\n                const updatedTodo = result.data[0];\n                const index = this.todos.indexOf(todo);\n                if (index !== -1) {\n                    this.todos[index] = updatedTodo;\n                }\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        }\n    }\n\n    async deleteTodo(todo: TodoModel) {\n        runInAction(() => {\n            this.initAPIRequestUIStatuses();\n        });\n        try {\n            await request<RequestRouteTodoDelete, ParamsRouteTodoDelete, ResponseRouteTodoDelete>({\n                location: locationRestTodoDelete,\n                params: {\n                    id: todo.id\n                }\n            });\n            runInAction(() => {\n                const index = this.todos.indexOf(todo);\n                if (index !== -1) {\n                    this.todos.splice(index, 1);\n                }\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.handleException(e);\n            });\n        }\n    }\n\n    tranformStatus(isDone: boolean): statusType {\n        if (isDone) {\n            return {\n                text: \"Done\",\n                label: \"done\",\n                isDone: true\n            };\n        } else {\n            return {\n                text: \"Open\",\n                label: \"open\",\n                isDone: false\n            };\n        }\n    }\n}\n\nexport { TodoStore };\n","import { observable, runInAction } from \"mobx\";\nimport { BaseOptions } from \"@wpnotes/utils\";\nimport { RootStore } from \"./stores\";\n\nclass OptionStore extends BaseOptions {\n    // Implement \"others\" property in your Assets.php;\n    @observable\n    public others: {} = {};\n\n    public readonly pureSlug: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly pureSlugCamelCased: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        super();\n        this.rootStore = rootStore;\n        this.pureSlug = BaseOptions.getPureSlug(process.env);\n        this.pureSlugCamelCased = BaseOptions.getPureSlug(process.env, true);\n\n        // Use the localized WP object to fill this object values.\n        runInAction(() => Object.assign(this, (window as any)[this.pureSlugCamelCased]));\n    }\n}\n\nexport { OptionStore };\n","import { observable, runInAction } from \"mobx\";\nimport { RootStore } from \"./stores\";\nimport { UserModel } from \"../models\";\nimport { RequestRouteUserGet, ParamsRouteUserGet, ResponseRouteUserGet, locationRestUserGet } from \"../wp-api\";\nimport { request } from \"../utils\";\nimport { BaseStore } from \"./base\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\n/**\n * Do a test ajax call when clicking the REST API url.\n *\n * @param e\n */\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass UserStore extends BaseStore {\n    @observable\n    public users: UserModel[] = [];\n\n    constructor(rootStore: RootStore) {\n        super(rootStore);\n    }\n\n    async getUsers(query: string) {\n        runInAction(() => {\n            this.loading = true;\n        });\n        try {\n            const result = await request<RequestRouteUserGet, ParamsRouteUserGet, ResponseRouteUserGet>({\n                location: locationRestUserGet,\n                params: {\n                    s: query\n                }\n            });\n            runInAction(() => {\n                this.users = result.data;\n                this.errors = result.errors;\n                this.errorType = \"warning\";\n            });\n        } catch (e) {\n            //console.log(e.responseJSON);\n        } finally {\n            runInAction(() => {\n                this.loading = false;\n            });\n        }\n    }\n}\n\nexport { UserStore };\n","import { observable } from \"mobx\";\nimport { RootStore } from \"./stores\";\n\nclass BaseStore {\n    @observable\n    public errors: string[] = [];\n\n    @observable\n    public errorType: \"success\" | \"info\" | \"warning\" | \"error\";\n\n    @observable\n    public currentPage: number;\n\n    @observable\n    public total: number;\n\n    @observable\n    public loading: boolean;\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n    }\n\n    handleException(e: any) {\n        if (e.status >= 500) {\n            this.errorType = \"error\";\n        }\n\n        if (e.status >= 400) {\n            this.errorType = \"warning\";\n        }\n\n        this.errors = e.responseJSON.errors;\n    }\n\n    initAPIRequestUIStatuses(isLoadingNeeded = false) {\n        if (isLoadingNeeded) {\n            this.loading = true;\n        }\n        this.errors = [];\n        this.errorType = \"success\";\n    }\n}\n\nexport { BaseStore };\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { TodoModel } from \"../models\";\n\nexport const locationRestTodoGet: RouteLocationInterface = {\n    path: \"/todo\",\n    method: RouteHttpVerb.GET\n};\n\nexport type RequestRouteTodoGet = RouteRequestInterface;\n\nexport type ParamsRouteTodoGet = RouteParamsInterface;\n\nexport interface ResponseRouteTodoGet extends RouteResponseInterface {\n    data: TodoModel[];\n    currentPage: number;\n    total: number;\n    errors: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { TodoModel } from \"../models\";\n\nexport const locationRestTodoPost: RouteLocationInterface = {\n    path: \"/todo\",\n    method: RouteHttpVerb.POST\n};\n\nexport type RequestRouteTodoPost = RouteRequestInterface;\n\nexport type ParamsRouteTodoPost = RouteParamsInterface;\n\nexport interface ResponseRouteTodoPost extends RouteResponseInterface {\n    data: TodoModel[];\n    errors?: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { TodoModel } from \"../models\";\n\nexport const locationRestTodoPut: RouteLocationInterface = {\n    path: \"/todo/:id\",\n    method: RouteHttpVerb.PUT\n};\n\nexport type RequestRouteTodoPut = RouteRequestInterface;\n\nexport type ParamsRouteTodoPut = RouteParamsInterface;\n\nexport interface ResponseRouteTodoPut extends RouteResponseInterface {\n    data: TodoModel[];\n    errors: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\n\nexport const locationRestTodoDelete: RouteLocationInterface = {\n    path: \"/todo/:id\",\n    method: RouteHttpVerb.DELETE\n};\n\nexport type RequestRouteTodoDelete = RouteRequestInterface;\n\nexport type ParamsRouteTodoDelete = RouteParamsInterface;\n\nexport interface ResponseRouteTodoDelete extends RouteResponseInterface {\n    message: string;\n    errors?: string[];\n}\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@wpnotes/utils\";\nimport { UserModel } from \"../models\";\n\nexport const locationRestUserGet: RouteLocationInterface = {\n    path: \"/user\",\n    method: RouteHttpVerb.GET\n};\n\nexport type RequestRouteUserGet = RouteRequestInterface;\n\nexport type ParamsRouteUserGet = RouteParamsInterface;\n\nexport interface ResponseRouteUserGet extends RouteResponseInterface {\n    data: UserModel[];\n    errors: string[];\n}\n"],"sourceRoot":""}